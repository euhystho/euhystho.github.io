---
import { Image } from "astro:assets";

interface Props {
  images: {
    src: ImageMetadata;
    alt: string;
  }[];
  caption?: boolean;
}

const { images, caption = false } = Astro.props;
---

<div class="embla" id="embla">
  <div class="embla__container">
    {
      images.map((image) => (
        <div class="embla__slide">
          <div class="embla__parallax">
            <div class="embla__parallax__layer">
              <Image
                src={image.src}
                alt={image.alt}
                width={image.src.width ?? 800}
                height={image.src.height ?? 600}
                class="embla__parallax__img"
                loading="eager"
              />
              {caption && (
                <div class="embla__image__overlay">
                  <span class="embla__overlay__text">{image.alt}</span>
                </div>
              )}
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>

<script>
  import EmblaCarousel from "embla-carousel";
  import Autoplay from "embla-carousel-autoplay";
  import { setupParallax } from "../../utils/embla-carousel/EmblaParallax.ts";

  document.addEventListener("astro:page-load", function () {
    const OPTIONS = {
      loop: true,
      startIndex: 0,
      skipSnaps: false,
      dragFree: false,
    };

    const emblaNode = document?.querySelector(".embla") as HTMLElement | null;
    if (emblaNode) {
      const emblaAPI = EmblaCarousel(emblaNode, OPTIONS, [
        Autoplay({ delay: 4000, stopOnInteraction: false }),
      ]);
      const removeParallax = setupParallax(emblaAPI);
      emblaAPI.on("destroy", removeParallax);
    }
  });
</script>

<style scoped>
  .embla {
    position: relative;
    overflow: hidden;
    max-width: 750px;
    margin: 0 auto;
    --slide-height: 30rem;
    --slide-spacing: 0.25rem;
    --slide-size: 100%;
  }
  .embla__container {
    display: flex;
    touch-action: pan-y pinch-zoom;
    margin-left: calc(var(--slide-spacing) * -1);
  }

  .embla__slide {
    transform: translate3d(0, 0, 0);
    flex: 0 0 var(--slide-size);
    min-width: 0;
    padding-left: var(--slide-spacing);
  }

  .embla__parallax {
    border-radius: var(--radius-lg);
    height: var(--slide-height);
    overflow: hidden;
    position: relative;
  }

  .embla__parallax__layer {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 105%;
    height: 100%;
    will-change: transform;
  }

  .embla__parallax__img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: var(--radius-lg);
    backface-visibility: hidden;
  }
  .embla__image__overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 15%;
    background: linear-gradient(
      to top,
      rgba(0, 0, 0, 0.8) 0%,
      rgba(0, 0, 0, 0.4) 50%,
      transparent 100%
    );
    z-index: 2;
    border-radius: 0 0 var(--radius-lg) var(--radius-lg);
    display: flex;
    align-items: flex-end;
    padding: 1rem;
  }

  .embla__overlay__text {
    color: var(--color-white);
    font-family: var(--font-sans);
    font-size: 1.2rem;
    font-weight: 600;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
  }
</style>
